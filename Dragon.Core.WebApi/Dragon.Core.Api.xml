<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dragon.Core.WebApi</name>
    </assembly>
    <members>
        <member name="T:Dragon.Core.WebApi.IgnoreApiResultAttribute">
            <summary>
            是否忽略统一返回格式
            </summary>
        </member>
        <member name="T:Dragon.Core.WebApi.TransactionAttribute">
            <summary>
            事务特性
            </summary>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.ApiModuleController.GetApiList(System.String,System.Int32)">
            <summary>
            获取api列表
            </summary>
            <param name="name"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.ApiModuleController.AddApiMouleAsync(Dragon.Core.ViewModel.ApiModuleViewModel)">
            <summary>
            增加api接口模块
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.ApiModuleController.UpdateApiMouleAsync(Dragon.Core.ViewModel.ApiModuleViewModel)">
            <summary>
            更新api接口模块
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.ApiModuleController.DeleteApiMouleAsync(System.Int32)">
            <summary>
            删除api接口模块，最好软删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.AuthController.Login(Dragon.Core.ViewModel.LoginInput)">
            <summary>
            登录接口
            </summary>
            <param name="loginInput"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.AuthController.GetUserInfo">
            <summary>
            获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.RoleController.SetRoleStatus(Dragon.Core.ViewModel.RoleInput)">
            <summary>
            设置角色状态
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.RoleController.GetRoleOwnMenuListAsync(System.Int32)">
            <summary>
            根据角色Id获取菜单树(前端区分父子节点)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.RoleController.GrantRoleMenuAsync(Dragon.Core.ViewModel.RoleMenuInPut)">
            <summary>
            根据角色授权菜单
            </summary>
            <param name="inPut"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.RoleController.GetRoleDeptListAsync(System.Int32)">
            <summary>
            根据角色Id获取机构Id集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.RoleController.GrantRoleDept(Dragon.Core.ViewModel.RoleDeptInput)">
            <summary>
            授权部门数据权限
            </summary>
            <param name="roleDeptInput"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.SysMenuController.GetPermCode">
            <summary>
            获取按钮权限(登录)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.SysMenuController.GetLoginMenuTree">
            <summary>
            获取登录导航树
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.SysMenuController.MenuListAsync(Dragon.Core.ViewModel.MenuParams)">
            <summary>
            菜单列表
            </summary>
            <param name="menuParams"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.SysMenuController.AddMenuAsync(Dragon.Core.ViewModel.MenuInput)">
            <summary>
            添加菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.SysMenuController.UpdateMenuAsync(Dragon.Core.ViewModel.MenuInput)">
            <summary>
            更新菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.SysMenuController.DeleteMenuAsync(System.Int32)">
            <summary>
            删除菜单
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dragon.Core.WebApi.Controllers.UserController.CheckDataScope(System.Int32)">
            <summary>
            检查是否有部门权限
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="T:Dragon.Core.WebApi.Filter.ApiResultFilter">
            <summary>
            增加统一返回格式
            </summary>
        </member>
        <member name="M:Dragon.Core.WebApi.Filter.AutofacPropertityModuleReg.Load(Autofac.ContainerBuilder)">
            <summary>
            允许控制器属性注入
            </summary>
            <param name="builder"></param>
        </member>
        <member name="T:Dragon.Core.WebApi.Filter.GlobalRouteAuthorizeConvention">
            <summary>
            Summary:全局路由权限公约
            Remarks:目的是针对不同的路由，采用不同的授权过滤器
            如果 controller 上不加 [Authorize] 特性，默认都是 Permission 策略
            否则，如果想特例其他授权机制的话，需要在 controller 上带上  [Authorize]，然后再action上自定义授权即可，比如 [Authorize(Roles = "Admin")]
            </summary>
        </member>
        <member name="T:Dragon.Core.WebApi.Filter.GlobalExceptionsFilter">
            <summary>
            全局异常错误日志
            </summary>
        </member>
        <member name="M:Dragon.Core.WebApi.Filter.GlobalExceptionsFilter.WriteLog(System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:Dragon.Core.WebApi.Filter.GlobalRoutePrefixFilter">
            <summary>
            全局路由前缀公约
            </summary>
        </member>
        <member name="T:Dragon.Core.WebApi.Filter.TransactionScopeFilter">
            <summary>
            事务过滤器
            </summary>
        </member>
    </members>
</doc>
